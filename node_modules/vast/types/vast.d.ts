declare function createState(onStateChange?: (...args: unknown[]) => unknown): CreateStateReturn;
type StateInput<S> = S | ((prevState?: S) => S);
type SetStateInput<S> = S | ((prevState: S) => S);
type State = CreateStateReturn;
type StateHandlerReturn<S> = [S, (nextState: SetStateInput<S>) => void];
type UseState<S> = () => StateHandlerReturn<S>;
type CreateStateReturn = {
    reset: () => void;
    registerStateKey: <S>(initialState?: StateInput<S> | undefined, onUpdate?: (() => void) | undefined) => () => StateHandlerReturn<S>;
};
export { createState, State, StateHandlerReturn, UseState };
//# sourceMappingURL=vast.d.ts.map